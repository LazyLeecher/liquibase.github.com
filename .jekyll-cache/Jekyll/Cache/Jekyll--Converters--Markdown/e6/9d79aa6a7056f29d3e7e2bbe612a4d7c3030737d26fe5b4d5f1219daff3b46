I"D<h1 id="liquibase-sdk-vagrant">Liquibase SDK Vagrant</h1>

<p>The Liquibase SDK uses <a href="http://vagrantup.com/">Vagrant</a> to manage database servers.
Vagrant configurations can be auto-generated via the <code class="highlighter-rouge">liquibase-sdk vagrant BOX_NAME init</code> command and started with <code class="highlighter-rouge">liquibase-sdk vagrant BOX_NAME up</code>.</p>

<p>For convenience, the <code class="highlighter-rouge">liquibase-sdk</code> application will execute standard vagrant commands such as up, destroy, halt, and provision.</p>

<p>Within the Liquibase SDK directory structure, vagrant boxes are stored as subdirectories under LIQUIBASE_HOME/sdk/vagrant.
There is a special “LIQUIBASE_HOME/sdk/install-files” directory which is used for storing files that cannot be freely downloaded from the Internet.
The output from the init command should list anything that needs to be stored in the install-files directory for your configuration.</p>

<p><strong>Liquibase SDK is available in Liquibase 3.2.0+</strong></p>

<h2 id="standard-vagrant-box-configuration">Standard Vagrant Box Configuration</h2>

<ul>
  <li>Most Vagrant boxes are created with host-only networking on IP 10.10.100.100.</li>
  <li>Firewalls are disabled to limit unexpected errors and because the network is host-only.</li>
  <li>A “liquibase” OS user is created with password “liquibase”</li>
  <li>A “lbuser” database user is created with a password of “lbuser”</li>
  <li>An alternate “lbuser2” database user is created with a password of “lbuser2”</li>
  <li>A catalog of “lbcat” is created if the database supports catalogs</li>
  <li>An alternate catalog of “lbcat2” is created if the database supports catalogs</li>
  <li>A schema of “lbschema” is created if the databases supports schemas</li>
  <li>An alternate schema of “lbschema2” is created if the databases supports schemas</li>
</ul>

<p>__Each database configuration may vary from these standards. Check the output of <code class="highlighter-rouge">liquibase-sdk vagrant BOX_NAME init</code> to confirm configuration.</p>

<h2 id="expected-vagrant-base-box-definitions">Expected Vagrant Base Box Definitions</h2>

<p>The vagrant configurations generated by liquibase-sdk vagrant BOX_NAME init do not include a base box URL.
This means you need to run <code class="highlighter-rouge">vagrant box add BASE_BOX_NAME URL</code> for each base box name Liquibase will create boxes for.</p>

<p>Liquibase uses the following box definitions:</p>

<ul>
  <li>liquibase.linux.centos.x64</li>
  <li>liquibase.windows.2008r2.x64 (see below for information on creating a base windows box)</li>
</ul>

<p>Example: <code class="highlighter-rouge">vagrant box add liquibase.linux.centos.x64 http://developer.nrel.gov/downloads/vagrant-boxes/CentOS-6.4-x86_64-v20130731.box</code></p>

<h2 id="available-commands">Available Commands</h2>

<h3 id="liquibase-sdk-vagrant-box_name-init-databasesconfigurations">liquibase-sdk vagrant [BOX_NAME] init –databases=[CONFIGURATION(s)]</h3>

<p>The <code class="highlighter-rouge">vagrant BOX_NAME init</code> command will create a new vagrant box for the given configurations. This is a Liquibase SDK specific command and does not simply call the standard <code class="highlighter-rouge">vagrant init</code> command.
Multiple configurations can be listed as
a comma separated list. Parameters to each configuration are defined in [square brackets]. Re-running <code class="highlighter-rouge">vagrant BOX_NAME init</code> will overwrite any changes you may have made to files in the LIQUIBASE_SDK/vagrant/BOX_NAME directory.</p>

<p>Examples:</p>

<ul>
  <li><code class="highlighter-rouge">vagrant mysql init --databases=mysql</code></li>
  <li><code class="highlighter-rouge">vagrant oss-db init --databases=mysql,postgres</code></li>
  <li><code class="highlighter-rouge">vagrant mysql-win init --databases=mysql[config:windows]</code></li>
</ul>

<h3 id="liquibase-sdk-vagrant-box_name-up">liquibase-sdk vagrant [BOX_NAME] up</h3>

<p>Start a vagrant box previously created with the <code class="highlighter-rouge">vagrant BOX_NAME init</code> command</p>

<p>Examples:</p>

<ul>
  <li><code class="highlighter-rouge">vagrant mysql-windows up</code></li>
  <li><code class="highlighter-rouge">vagrant oss-db up</code></li>
</ul>

<h3 id="liquibase-sdk-vagrant-box_name-destroy">liquibase-sdk vagrant [BOX_NAME] destroy</h3>

<p>Stops the running vagrant box and destroys all resources that were created during the machine creation process. Does not delete the box configuration.</p>

<h3 id="liquibase-sdk-vagrant-box_name-halt">liquibase-sdk vagrant [BOX_NAME] halt</h3>

<p>Shuts down the running vagrant box.</p>

<h3 id="liquibase-sdk-vagrant-box_name-suspend">liquibase-sdk vagrant [BOX_NAME] suspend</h3>

<p>Suspends the given vagrant box, rather than fully shutting it down or destroying it.</p>

<h3 id="liquibase-sdk-vagrant-box_name-resume">liquibase-sdk vagrant [BOX_NAME] resume</h3>

<p>Resumes the given vagrant box. Normally resumes from the <code class="highlighter-rouge">suspend</code> command</p>

<h3 id="liquibase-sdk-vagrant-status">liquibase-sdk vagrant status</h3>

<p>Returns the state of the machines Vagrant is managing</p>

<h3 id="liquibase-sdk-vagrant-box_name-reload">liquibase-sdk vagrant [BOX_NAME] reload</h3>

<p>Equivalent of halt followed by an up. This is normally not a command you need to run unless you are manually changing your generated configuration files.</p>

<h3 id="liquibase-sdk-vagrant-box_name-provision">liquibase-sdk vagrant [BOX_NAME] provision</h3>

<p>Re-runs the defined vagrant provisioners. This is normally not a command you need to run unless you are manually changing your generated configuration files.</p>

<h2 id="base-windows-vagrant-box">Base Windows Vagrant Box</h2>

<p>To run windows-based databases, you need a base windows box. The easiest way is to download the Windows 2008R2 180 day trial
image from <a href="http://www.microsoft.com/en-us/download/confirmation.aspx?id=16572">http://www.microsoft.com/en-us/download/confirmation.aspx?id=16572</a>.
Since it is a trial that times out, you will need to re-do this process every 180 days.
If you have a valid MSDN license you can use the same process to create a image that does not time out.</p>

<p>Once downloaded, create a new VirtualBox machine to be your vagrant base box. In the initial wizard, do not create or a virtual hard drive because
attaching the .vhd you downloaded will attach it as a SATA drive which does not boot. Once it is created, go to the Storage settings and add the downloaded
.vhd in the IDE controller. The trial server Administrator password is Pass@word1</p>

<p><strong>Before “vagrant package”:</strong></p>

<ol>
  <li>Make sure to set the host name to “vagrant” and create a “vagrant” user as administrator. You will need to run secpol.msc and change the Password Policy under “Account Policies”</li>
  <li>Install VirtualBox guest tools</li>
  <li>Disable audio and USB (need to change mouse to ps/2 to disable usb)</li>
  <li>Activate Windows</li>
  <li>Install windows updates (it may take several rounds)</li>
  <li>Disable firewall</li>
  <li>Install puppet from <a href="http://puppetlabs.com/misc/download-options">http://puppetlabs.com/misc/download-options</a></li>
  <li>Enable remote desktop</li>
  <li>Package with: <code class="highlighter-rouge">vagrant package --base YOUR_VIRTUALBOX_MACHINE_NAME</code></li>
  <li>Install with: <code class="highlighter-rouge">vagrant box add liquibase.windows.2008r2.x64 package.box</code></li>
</ol>

<h2 id="vagrant-configuration-details">Vagrant Configuration Details</h2>

<p>Provisioning in Vagrant is handed primarily by puppet.
The Vagrantfile contains only a shell provisioner, but it does a small amount of setup to bootstrap puppet then runs puppet.
The starting puppet file is manifests/init.pp within each vagrant box.</p>

:ET