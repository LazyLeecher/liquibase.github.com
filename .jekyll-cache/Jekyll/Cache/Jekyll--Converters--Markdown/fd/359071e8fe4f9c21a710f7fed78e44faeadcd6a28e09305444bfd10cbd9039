I"∑<h1 id="supported-databases">Supported Databases</h1>

<p>Due to variations in data types and SQL syntax, the following databases are currently supported out of the box.  Additional databases as well as enhancements to support for the below databases are available through <a href="http://liquibase.org/extensions">Liquibase extensions</a></p>

<p>Please find further information about which JDBC driver, URL, classes etc. these databases need, by clicking on the database-specific links in the table below.</p>

<table>
<tr><th>Database</th><th>Type Name</th><th>Notes</th></tr>
<tr><td>MySQL</td><td>mysql</td><td>No Issues</td></tr>
<tr><td>PostgreSQL</td><td>postgresql</td><td>8.2+ is required to use the "drop all database objects" functionality.</td></tr>
<tr><td>Oracle</td><td>oracle</td><td>11g driver is required when using the diff tool on databases running with AL32UTF8 or AL16UTF16</td></tr>
<tr><td>Sql Server</td><td>mssql</td><td>No Issues</td></tr>
<tr><td>Sybase_Enterprise</td><td>sybase</td><td>ASE 12.0+ required. "select into" database option needs to be set. Best driver is JTDS. Sybase does not support transactions for DDL so rollbacks will not work on failures. Foreign keys can not be dropped which can break the rollback or dropAll functionality.</td></tr>
<tr><td>Sybase_Anywhere</td><td>asany</td><td><b>Since 1.9</b></td></tr>
<tr><td>DB2</td><td>db2</td><td>No Issues. Will auto-call REORG when necessary.</td></tr>
<tr><td><a href="apache_derby.html">Apache_Derby</a></td><td>derby</td><td>No Issues</td></tr>
<tr><td>HSQL</td><td>hsqldb</td><td>No Issues</td></tr>
<tr><td>H2</td><td>h2</td><td>No Issues</td></tr>
<tr><td><a href="informix.html">Informix</a></td><td>informix</td><td>No Issues</td></tr>
<tr><td>Firebird</td><td>firebird</td><td>No Issues</td></tr>
<tr><td><a href="sqlite.html">SQLite</a></td><td>sqlite</td><td>No Issues</td></tr>
</table>

<p>As of Liquibase v3.1, support for some less common databases has been moved out of Liquibase core and into extensions.</p>

<p>To re-enable support for these databases, install the corresponding extension:</p>

<ul>
  <li><a href="https://github.com/liquibase/liquibase-cache">InterSystems Cache</a></li>
  <li><a href="https://github.com/liquibase/liquibase-maxdb">SAP MaxDB</a></li>
  <li><a href="https://github.com/liquibase/liquibase-db2i">IBM DB2 for iSeries</a></li>
</ul>

<h1 id="using-unsupported-databases">Using Unsupported Databases</h1>

<p>Since Liquibase is built on top of standard JDBC, the only ties it has to the underlying database is through the SQL that can vary from DBMS to DBMS. If you attempt to use Liquibase with an unsupported database, it will try to run and will most likely succeed. The only problem you are likely to run into is the current date/time function name. If Liquibase is unable to determine the correct date/time function, you can pass it in via the <a href="documentation/command_line.html">‚Äúcommand line‚Äù</a> and <a href="documentation/ant/index.html">documentation/Ant</a>).</p>

<p>You may also run into problem with the SQL generated by the change/refactoring tags on unsupported databases. The best way to deal with this problem is to first try the standard change/refactoring tags. If it generates an error, you can fall back to the <a href="documentation/changes/sql.html">sql change</a> to code whatever change you need to make in a way that your database understands.</p>

<p>If, for some reason, the DatabaseChangeLog table cannot be created on your database, the base creation SQL that you can modify to suit your needs is:</p>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">DATABASECHANGELOG</span> <span class="p">(</span><span class="n">id</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">150</span><span class="p">)</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
<span class="n">author</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">150</span><span class="p">)</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
<span class="n">filename</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">255</span><span class="p">)</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
<span class="n">dateExecuted</span> <span class="nb">datetime</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
<span class="n">md5sum</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">32</span><span class="p">),</span>
<span class="n">description</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">255</span><span class="p">),</span>
<span class="n">comments</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">255</span><span class="p">),</span>
<span class="n">tag</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">255</span><span class="p">),</span>
<span class="n">liquibase</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span>
<span class="k">primary</span> <span class="k">key</span><span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="n">author</span><span class="p">,</span> <span class="n">filename</span><span class="p">))</span></code></pre></figure>

<p>Reasons for creating the DatabaseChangeLog table yourself include database that require null fields to be specified as such and index limitations that don‚Äôt allow primary keys on fields as long. You can change the data types and or data type lengths all you want.</p>
:ET